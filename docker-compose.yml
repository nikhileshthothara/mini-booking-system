services:
  db:
    image: postgres:15
    container_name: mini_booking_system_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: mini_booking_system_rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  web:
    build: .
    container_name: mini_booking_system
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: >
      sh -c "python manage.py migrate &&
             gunicorn myproject.wsgi:application --bind 0.0.0.0:8000"

  celery:
    build: .
    container_name: mini_booking_system_celery
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - rabbitmq
    volumes:
      - .:/app
    command: celery -A myproject worker --loglevel=info

volumes:
  postgres_data:
